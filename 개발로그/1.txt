T-HOLDEM 오프라인 텍사스 홀덤 토너먼트 운영 플랫폼 개발 보고서
1. 프로젝트 개요
목표: 오프라인 텍사스 홀덤 토너먼트 운영을 위한 웹 기반 플랫폼(모바일 친화적) 개발
주요 기능:
관리자/참가자용 페이지
실시간 정보 제공
테이블/좌석 자동 배정
칩/블라인드/상금 관리
기록/히스토리 관리
권한/직원 관리
모든 기능을 하나의 플랫폼에서 통합 제공
2. 프로젝트 표준화 및 초기화
Shrimp Task Manager를 활용하여 프로젝트 표준(shrimp-rules.md)을 생성
프로젝트 개요, 아키텍처, 기술스택, DB 설계, UX 원칙 등 상세 보강
파일 작업 원칙:
edit_file_lines 등 파일 작업 시 반드시 인접 라인 확인
파일 수정 전후 항상 라인 위치 재확인
환경 세팅:
React + Tailwind + Firebase 기반 프로젝트 구조(app 디렉터리)
logs 폴더 등 운영에 필요한 기본 환경 구성
3. 요구사항 분석 및 Task 분할
개발 계획서 분석:
상세 요구사항(기능, UI, DB, 기술스택, 단계별 구현 목표 등) 기반
Task 분할:
1~2일 단위, 최대 10개 Task로 분할
각 Task별 명확한 완료 기준(acceptance criteria) 및 의존 관계 명시
주요 Task 예시:
환경/DB 세팅
관리자 인증(로그인/권한)
참가자 관리(CRUD/실시간 동기화)
테이블/좌석 자동 배정
칩/블라인드/타이머 관리
상금 자동 계산/분배
기록/히스토리 관리
참가자용 실시간 안내 페이지
직원/권한 관리
배포/문서화/테스트
4. Task 실행 및 개발 내역
TaskExecutor 모드로 각 Task를 순차 실행(연속실행 요청)
주요 구현 내역:
React+Tailwind+Firebase 기반 프로젝트(app 디렉터리) 생성
관리자 인증(Firebase Auth)
참가자 CRUD/실시간 동기화
테이블/좌석 자동 배정, 딜러 매칭
칩/블라인드/타이머 관리
상금 자동 계산/분배
기록/히스토리 관리
참가자용 실시간 안내 페이지
직원/권한 관리
운영자용 README.md 작성(설치, 배포, 기능, 가이드, 문제해결 등)
파일 작업 및 Git 관리:
파일 생성/수정 시 edit_file_lines 사용, 인접 라인 확인
작업 후 git add/commit, 테스트 브랜치에서 충분히 검증 후 PR 및 master 병합
5. 빌드/배포 단계 문제 및 해결 시도
문제:
npm run build 시 "Module not found: Error: Can't resolve './App'" 에러 지속
진단 및 시도한 해결책:
App.tsx, index.tsx, 디렉터리, import/export, 대소문자, 캐시, node_modules, 빌드 경로 등 점검 및 수정
App.tsx → app.tsx로 변경, import 경로 수정, 캐시 삭제, 파일 복원 등 다양한 방법 시도
App.tsx 내 auth import 누락, TournamentHistory import 누락 등 코드 구조 문제도 발견
진행 방식:
사용자는 "해결할 때까지 연속실행"을 요청
어시스턴트는 문제 원인 진단 및 단계별 수정(코드, 환경, 캐시, import 등)을 반복적으로 시도
6. 핵심 원칙 및 프로세스
Task 기반 개발:
모든 개발 및 수정은 Task로 분할, 계획, 실행, 검증, 완료의 순서로 진행
Shrimp Task Manager:
TaskPlanner: 작업 계획 및 분할
TaskExecutor: 작업 실행, 검증, 완료
연속 실행 모드 지원(여러 Task 자동 처리)
파일 작업 및 Git:
파일 작업 전후 인접 라인 확인, dryRun 적용
git add/commit, PR, master 병합 등 표준화된 Git 플로우
문제 발생 시:
원인 진단 → 단계별 수정 → 검증 → 반복
빌드/배포 오류 등은 근본 원인 해결까지 연속 실행
7. 결론 및 향후 계획
현재 상태:
플랫폼의 전체 기능을 단계별로 구현 완료
빌드/배포 단계에서 App.tsx 인식 오류로 인한 빌드 실패 문제 집중 해결 중
향후 계획:
빌드/배포 문제 완전 해결
실서비스 배포 및 운영 안정화
추가 기능 및 유지보수 Task로 전환
부록: 주요 원칙 및 참고 사항
모든 파일 작업 전후 인접 라인 확인 및 dryRun 적용
Git 저장소 미존재 시 git init, 파일 작업 후 add/commit 필수
logs 폴더에 실행 오류 기록
DB 연결 시 MySQL 계정/접속 정보 명확히 사용
Task, PR, 브랜치, 배포 등 모든 작업은 표준화된 프로세스 준수
