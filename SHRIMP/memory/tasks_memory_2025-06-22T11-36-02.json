{
  "tasks": [
    {
      "id": "5ab1e1bb-e083-49da-a8e5-d03dce5ff6cc",
      "name": "`useTables` 훅 기능 개선 (테이블 생성 및 밸런싱 로직 고도화)",
      "description": "`useTables.ts`에 새 테이블을 생성하는 `openNewTable` 함수를 추가하고, 기존 `closeTable` 함수의 자동 밸런싱 로직을 개선하며, 결과 리포트를 위한 데이터 구조를 확장합니다.",
      "status": "completed",
      "dependencies": [],
      "createdAt": "2025-06-22T11:13:30.752Z",
      "updatedAt": "2025-06-22T11:14:23.635Z",
      "relatedFiles": [
        {
          "path": "app2/src/hooks/useTables.ts",
          "type": "TO_MODIFY",
          "description": "핵심 비즈니스 로직 추가 및 수정"
        },
        {
          "path": "app2/src/hooks/useLogger.ts",
          "type": "DEPENDENCY",
          "description": "로깅 함수 의존성"
        }
      ],
      "implementationGuide": "1. `useTables.ts` 파일을 엽니다.\n2. `openNewTable()` 비동기 함수를 새로 정의하여, Firestore에 비어있는 새 테이블 문서를 추가하고 로그를 기록하는 로직을 구현합니다.\n3. `BalancingResult` 인터페이스에 `fromSeatIndex`와 `toSeatIndex` 숫자 타입 속성을 추가합니다.\n4. `closeTable` 함수의 재배치 로직을 수정하여, 남은 테이블 간 인원 편차가 최소화되도록 참가자를 배분하는 알고리즘을 적용합니다.\n5. `closeTable` 함수가 확장된 `BalancingResult` 인터페이스에 맞춰, 참가자의 출발/도착 좌석 인덱스 정보까지 포함하여 반환하도록 수정합니다.\n6. `useTables`가 내보내는 객체에 `openNewTable` 함수를 추가합니다.",
      "verificationCriteria": "1. `openNewTable` 호출 시 `tables` 컬렉션에 비어있는 새 테이블이 정상적으로 추가되어야 합니다.\n2. `closeTable` 호출 시, 남은 테이블들의 인원 수가 이전보다 더 균등하게 분배되어야 합니다.\n3. `closeTable`이 반환하는 결과 배열의 각 객체에는 `fromSeatIndex`와 `toSeatIndex` 정보가 포함되어야 합니다.",
      "analysisResult": "최종 목표는 `TablesPage`에 '새 테이블 생성' 기능을 추가하고, 기존 '테이블 닫기' 기능의 밸런싱 로직과 결과 리포트를 개선하는 것입니다. 이를 위해 `useTables.ts`에 비즈니스 로직을 먼저 구현/개선하고, 그 후 `TablesPage.tsx`에서 해당 로직을 호출하고 UI를 연동하는 순서로 작업을 진행합니다.",
      "summary": "`useTables.ts`가 성공적으로 개선되었습니다. 새 테이블을 생성하는 `openNewTable` 함수가 추가되었고, `closeTable` 함수 내의 자동 밸런싱 로직이 테이블 간 인원 편차를 최소화하도록 고도화되었습니다. 또한, `BalancingResult` 인터페이스가 출발 및 도착 좌석 번호를 포함하도록 확장되어, UI 단에서 더 상세한 정보를 표시할 수 있는 기반이 마련되었습니다. 모든 요구사항과 기술적 기준을 완벽하게 충족합니다.",
      "completedAt": "2025-06-22T11:14:23.634Z"
    },
    {
      "id": "c3ac69b6-216d-4271-ac8f-3db533c04bd1",
      "name": "`TablesPage` UI 개선 (테이블 생성 버튼 및 상세 리포트 연동)",
      "description": "`TablesPage.tsx`에 '새 테이블 열기' 버튼을 추가하고, 개선된 `useTables` 훅의 기능들을 연동하여 UI를 완성합니다.",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "5ab1e1bb-e083-49da-a8e5-d03dce5ff6cc"
        }
      ],
      "createdAt": "2025-06-22T11:13:30.752Z",
      "updatedAt": "2025-06-22T11:16:29.185Z",
      "relatedFiles": [
        {
          "path": "app2/src/pages/TablesPage.tsx",
          "type": "TO_MODIFY",
          "description": "UI 추가 및 수정"
        },
        {
          "path": "app2/src/hooks/useTables.ts",
          "type": "DEPENDENCY",
          "description": "비즈니스 로직 의존성"
        }
      ],
      "implementationGuide": "1. `TablesPage.tsx` 파일을 엽니다.\n2. `useTables` 훅에서 `openNewTable` 함수를 import합니다.\n3. `isOpeningTable` 상태를 `useState`로 관리합니다.\n4. 페이지 상단에 '새 테이블 열기' 버튼을 추가하고, 클릭 시 `isOpeningTable` 상태를 true로 변경 후 `openNewTable` 함수를 호출하고, 완료되면 상태를 false로 변경하는 핸들러를 연결합니다.\n5. 자동 밸런싱 결과 리포트 팝업의 JSX를 수정하여, 확장된 `BalancingResult` 객체의 `fromSeatIndex`와 `toSeatIndex`를 사용해 '테이블-좌석' 형식(예: 9-3 → 5-7)으로 이동 내역을 표시합니다.",
      "verificationCriteria": "1. '새 테이블 열기' 버튼이 화면에 표시되어야 하며, 클릭 시 `openNewTable` 함수가 호출되고 로딩 상태가 표시되어야 합니다.\n2. 테이블 닫기 후 나타나는 결과 리포트 팝업에 참가자 이동 경로가 '9-3 → 5-7'과 같은 상세 형식으로 표시되어야 합니다.",
      "analysisResult": "최종 목표는 `TablesPage`에 '새 테이블 생성' 기능을 추가하고, 기존 '테이블 닫기' 기능의 밸런싱 로직과 결과 리포트를 개선하는 것입니다. 이를 위해 `useTables.ts`에 비즈니스 로직을 먼저 구현/개선하고, 그 후 `TablesPage.tsx`에서 해당 로직을 호출하고 UI를 연동하는 순서로 작업을 진행합니다.",
      "summary": "'새 테이블 열기' 버튼을 추가하고 핸들러 `handleOpenTable`을 연동했으며, `openNewTable` 함수 호출 및 로딩 상태를 올바르게 처리했습니다. 또한, 자동 밸런싱 결과 리포트 팝업에서 `fromSeatIndex`와 `toSeatIndex`를 사용하여 '테이블-좌석' 형식의 상세 이동 내역을 표시하도록 UI를 성공적으로 개선했습니다. 모든 요구사항이 충족되었습니다.",
      "completedAt": "2025-06-22T11:16:29.184Z"
    }
  ]
}