{
  "tasks": [
    {
      "id": "086973da-b714-4106-a578-df724cbcc42b",
      "name": "[Backend] useTables 훅에 최대 좌석 수 설정 연동",
      "description": "useTables.ts를 수정하여 Firestore의 'tournaments/settings' 문서에서 'maxSeatsPerTable' 설정을 읽고 업데이트하는 기능을 추가합니다. openNewTable 함수는 이 설정 값을 사용하도록 변경합니다.",
      "status": "completed",
      "dependencies": [],
      "createdAt": "2025-06-22T16:05:58.443Z",
      "updatedAt": "2025-06-22T16:12:58.392Z",
      "relatedFiles": [
        {
          "path": "app2/src/hooks/useTables.ts",
          "type": "TO_MODIFY",
          "description": "최대 좌석 수 설정을 위한 Firestore 연동 로직 및 관련 함수를 추가합니다."
        }
      ],
      "implementationGuide": "1. 'tournaments/settings' 문서의 'maxSeatsPerTable' 필드를 실시간으로 구독하여 상태(예: maxSeatsSetting)로 관리하는 로직을 추가합니다.\n2. 해당 값을 업데이트하는 'updateMaxSeatsSetting' 함수를 구현하고 useTables 훅의 반환 객체에 포함시킵니다.\n3. 기존 openNewTable 함수가 인자 대신 Firestore에서 읽어온 'maxSeatsSetting' 상태를 사용하여 새 테이블의 좌석(Array(maxSeatsSetting).fill(null))을 생성하도록 수정합니다.\n4. 컴포넌트에서 사용할 수 있도록 'maxSeatsSetting' 상태도 반환 객체에 포함시킵니다.",
      "verificationCriteria": "'updateMaxSeatsSetting' 호출 시 Firestore 문서가 올바르게 업데이트되어야 합니다. 페이지 로드 시 'maxSeatsSetting' 상태가 Firestore의 값으로 정확히 설정되어야 합니다. 'openNewTable'을 호출하면 새 테이블이 설정된 좌석 수로 생성되는지 확인해야 합니다.",
      "summary": "`useTables.ts`에 Firestore와 연동되는 최대 좌석 수 설정 로직을 성공적으로 구현했습니다. `maxSeatsSetting` 상태, `updateMaxSeatsSetting` 함수, 그리고 이를 사용하는 `openNewTable` 함수까지 모두 계획대로 수정되었습니다.",
      "completedAt": "2025-06-22T16:12:58.391Z"
    },
    {
      "id": "2a4b7557-d907-4754-b7c1-761876b08385",
      "name": "[Frontend] TablesPage에 설정 드롭다운 UI 구현",
      "description": "TablesPage.tsx의 기존 '카드 크기' 슬라이더를 드롭다운 메뉴로 변경하고, '최대 좌석 수' 설정을 위한 새 드롭다운 메뉴를 추가합니다.",
      "status": "completed",
      "dependencies": [
        {
          "taskId": "086973da-b714-4106-a578-df724cbcc42b"
        }
      ],
      "createdAt": "2025-06-22T16:05:58.443Z",
      "updatedAt": "2025-06-22T16:14:28.451Z",
      "relatedFiles": [
        {
          "path": "app2/src/pages/TablesPage.tsx",
          "type": "TO_MODIFY",
          "description": "기존 슬라이더를 드롭다운으로 교체하고, 새로운 설정 드롭다운을 추가합니다."
        }
      ],
      "implementationGuide": "1. 기존의 카드 크기 조절 슬라이더(<input type='range'>)를 제거합니다.\n2. 1부터 5까지의 옵션을 가진 '카드 크기' <select> 드롭다운을 추가하고, onChange 이벤트 발생 시 'setGridSize'를 호출하도록 연결합니다.\n3. 5부터 10까지의 옵션을 가진 '최대 좌석 수' <select> 드롭다운을 새로 추가합니다. 이 드롭다운의 값은 useTables 훅에서 받아온 'maxSeatsSetting'과 동기화하고, onChange 이벤트 발생 시 'updateMaxSeatsSetting' 함수를 호출하도록 연결합니다.\n4. 두 드롭다운의 스타일이 페이지의 다른 컨트롤들과 일관성을 유지하도록 Tailwind CSS 클래스를 적용합니다.",
      "verificationCriteria": "'카드 크기' 슬라이더가 드롭다운 메뉴로 대체되었는지 확인합니다. '최대 좌석 수' 드롭다운이 새로 추가되었는지 확인합니다. 각 드롭다운의 값을 변경했을 때, 'gridSize' 상태와 Firestore의 'maxSeatsPerTable' 값이 정상적으로 변경되는지 확인해야 합니다.",
      "summary": "`TablesPage.tsx`의 UI를 성공적으로 수정했습니다. 기존 '카드 크기' 슬라이더를 드롭다운 메뉴로 교체하고, Firestore와 연동되는 '최대 좌석 수' 설정 드롭다운을 새로 추가하여 사용자 경험과 UI 효율성을 개선했습니다.",
      "completedAt": "2025-06-22T16:14:28.451Z"
    }
  ]
}