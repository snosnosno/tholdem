{
  "tasks": [
    {
      "id": "2dfedb33-d8e2-4d0b-b8bd-2008404fb88f",
      "name": "WorkLog 시간 데이터 파싱 로직 통일",
      "description": "scheduledStartTime/scheduledEndTime Timestamp 객체 파싱 로직을 통일하여 모든 컴포넌트에서 일관된 시간 데이터 처리",
      "notes": "Firestore Timestamp 객체와 string 형식 모두 처리 가능하도록 구현",
      "status": "pending",
      "dependencies": [],
      "createdAt": "2025-08-22T09:46:26.332Z",
      "updatedAt": "2025-08-22T09:46:26.332Z",
      "relatedFiles": [
        {
          "path": "app2/src/utils/workLogMapper.ts",
          "type": "TO_MODIFY",
          "description": "calculateWorkHours 함수 개선"
        },
        {
          "path": "app2/src/components/payroll/DetailEditModal.tsx",
          "type": "TO_MODIFY",
          "description": "시간 파싱 로직 개선"
        },
        {
          "path": "app2/src/utils/timeUtils.ts",
          "type": "TO_MODIFY",
          "description": "시간 유틸리티 함수 추가"
        }
      ],
      "implementationGuide": "1. workLogMapper.ts의 calculateWorkHours 함수 개선\n2. Timestamp 객체를 Date로 변환하는 유틸리티 함수 생성\n3. DetailEditModal의 parseTime 함수 개선\n4. 모든 시간 표시 형식을 HH:mm으로 통일",
      "verificationCriteria": "모든 컴포넌트에서 Timestamp 객체가 올바르게 파싱되어 시간이 정확히 표시되는지 확인",
      "analysisResult": "스태프탭, 정산탭, 정산모달 간의 완벽한 데이터 동기화를 구현하여 모든 정보가 실시간으로 일치하도록 보장"
    },
    {
      "id": "137cc52e-2511-4e13-a44e-cdbc94f5d765",
      "name": "통합 데이터 컨텍스트 강화",
      "description": "JobPostingContext에서 WorkLog 데이터를 중앙 집중 관리하여 모든 컴포넌트가 동일한 데이터 소스 사용",
      "notes": "onSnapshot을 통한 실시간 동기화 유지",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "2dfedb33-d8e2-4d0b-b8bd-2008404fb88f"
        }
      ],
      "createdAt": "2025-08-22T09:46:26.332Z",
      "updatedAt": "2025-08-22T09:46:26.332Z",
      "relatedFiles": [
        {
          "path": "app2/src/contexts/JobPostingContextAdapter.tsx",
          "type": "TO_MODIFY",
          "description": "WorkLog 구독 강화"
        },
        {
          "path": "app2/src/hooks/useStaffWorkData.ts",
          "type": "TO_MODIFY",
          "description": "Context 데이터 우선 사용"
        }
      ],
      "implementationGuide": "1. JobPostingContextAdapter에 workLogs 실시간 구독 강화\n2. useStaffWorkData 훅이 Context의 workLogs 우선 사용\n3. refreshWorkLogs 함수 개선으로 즉시 동기화\n4. 데이터 변경시 모든 구독 컴포넌트에 자동 전파",
      "verificationCriteria": "스태프탭에서 시간 변경시 정산탭과 정산모달에 즉시 반영되는지 확인",
      "analysisResult": "스태프탭, 정산탭, 정산모달 간의 완벽한 데이터 동기화를 구현하여 모든 정보가 실시간으로 일치하도록 보장"
    },
    {
      "id": "7b602a0e-c709-40fd-b1a6-646cc6fe10dd",
      "name": "역할별 급여 설정 실시간 동기화",
      "description": "역할별 급여 설정을 Firestore에 저장하고 실시간으로 동기화하여 모든 탭에서 일관된 급여 정보 표시",
      "notes": "기존 hourlyWages 필드와 호환성 유지",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "137cc52e-2511-4e13-a44e-cdbc94f5d765"
        }
      ],
      "createdAt": "2025-08-22T09:46:26.332Z",
      "updatedAt": "2025-08-22T09:46:26.332Z",
      "relatedFiles": [
        {
          "path": "app2/src/components/payroll/RoleSalarySettings.tsx",
          "type": "TO_MODIFY",
          "description": "Firestore 업데이트 추가"
        },
        {
          "path": "app2/src/hooks/useStaffWorkData.ts",
          "type": "TO_MODIFY",
          "description": "역할별 급여 실시간 반영"
        }
      ],
      "implementationGuide": "1. jobPosting 문서에 roleSalaries 필드 업데이트 로직 구현\n2. RoleSalarySettings 컴포넌트에서 Firestore 직접 업데이트\n3. useStaffWorkData의 getSalaryInfo 함수가 최신 정보 반환\n4. 역할 변경시 급여 자동 재계산",
      "verificationCriteria": "정산탭에서 역할별 급여 설정 변경시 모든 스태프의 급여가 자동 재계산되는지 확인",
      "analysisResult": "스태프탭, 정산탭, 정산모달 간의 완벽한 데이터 동기화를 구현하여 모든 정보가 실시간으로 일치하도록 보장"
    },
    {
      "id": "f29d1656-dd30-49d0-afe0-d8fb3b812575",
      "name": "수당 정보 영구 저장 구현",
      "description": "수당 정보를 staff 컬렉션에 저장하여 세션 간 데이터 유지 및 실시간 동기화",
      "notes": "allowances 객체 구조: {meal, transportation, accommodation, bonus, other, otherDescription}",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "137cc52e-2511-4e13-a44e-cdbc94f5d765"
        }
      ],
      "createdAt": "2025-08-22T09:46:26.332Z",
      "updatedAt": "2025-08-22T09:46:26.332Z",
      "relatedFiles": [
        {
          "path": "app2/src/components/payroll/DetailEditModal.tsx",
          "type": "TO_MODIFY",
          "description": "수당 저장 로직 추가"
        },
        {
          "path": "app2/src/components/payroll/BulkAllowancePanel.tsx",
          "type": "TO_MODIFY",
          "description": "일괄 적용 저장"
        },
        {
          "path": "app2/src/hooks/useStaffWorkData.ts",
          "type": "TO_MODIFY",
          "description": "저장된 수당 로드"
        }
      ],
      "implementationGuide": "1. staff 문서에 allowances 필드 추가\n2. DetailEditModal의 handleSave에서 Firestore 업데이트\n3. BulkAllowancePanel에서 일괄 수당 적용시 Firestore 업데이트\n4. useStaffWorkData에서 저장된 수당 정보 로드",
      "verificationCriteria": "수당 설정 후 페이지 새로고침해도 수당 정보가 유지되는지 확인",
      "analysisResult": "스태프탭, 정산탭, 정산모달 간의 완벽한 데이터 동기화를 구현하여 모든 정보가 실시간으로 일치하도록 보장"
    },
    {
      "id": "2487a41d-9fd6-4834-baf8-ef9ce01360c5",
      "name": "정산탭 편집 기능 완전 활성화",
      "description": "정산탭에서 역할별 급여 설정, 수당 일괄 적용, 급여 계산 수정 등 모든 편집 기능 활성화",
      "notes": "권한 체크: jobPosting.createdBy === currentUser.uid",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "7b602a0e-c709-40fd-b1a6-646cc6fe10dd"
        },
        {
          "taskId": "f29d1656-dd30-49d0-afe0-d8fb3b812575"
        }
      ],
      "createdAt": "2025-08-22T09:46:26.332Z",
      "updatedAt": "2025-08-22T09:46:26.332Z",
      "relatedFiles": [
        {
          "path": "app2/src/components/tabs/EnhancedPayrollTab.tsx",
          "type": "TO_MODIFY",
          "description": "편집 기능 활성화"
        },
        {
          "path": "app2/src/components/payroll/BulkSalaryEditModal.tsx",
          "type": "TO_MODIFY",
          "description": "일괄 급여 수정 구현"
        }
      ],
      "implementationGuide": "1. EnhancedPayrollTab에 편집 권한 체크 추가\n2. 역할별 급여 설정 UI 활성화 및 동작 구현\n3. 수당 일괄 적용 패널 완전 구현\n4. 개별 스태프 급여 수정 모달 연결",
      "verificationCriteria": "정산탭에서 모든 편집 기능이 정상 동작하고 변경사항이 즉시 반영되는지 확인",
      "analysisResult": "스태프탭, 정산탭, 정산모달 간의 완벽한 데이터 동기화를 구현하여 모든 정보가 실시간으로 일치하도록 보장"
    },
    {
      "id": "9a13057a-f57e-4708-8973-4011b43a792c",
      "name": "스태프탭-정산탭 데이터 일치성 검증",
      "description": "스태프탭의 출근/퇴근 시간, 역할, 출석 상태가 정산탭과 정산모달에 정확히 동기화되는지 검증",
      "notes": "개발자 도구 콘솔에서 데이터 동기화 로그 확인",
      "status": "pending",
      "dependencies": [
        {
          "taskId": "2dfedb33-d8e2-4d0b-b8bd-2008404fb88f"
        },
        {
          "taskId": "137cc52e-2511-4e13-a44e-cdbc94f5d765"
        },
        {
          "taskId": "2487a41d-9fd6-4834-baf8-ef9ce01360c5"
        }
      ],
      "createdAt": "2025-08-22T09:46:26.332Z",
      "updatedAt": "2025-08-22T09:46:26.332Z",
      "relatedFiles": [
        {
          "path": "app2/src/components/tabs/StaffManagementTab.tsx",
          "type": "TO_MODIFY",
          "description": "데이터 동기화 검증 로그"
        },
        {
          "path": "app2/src/components/tabs/EnhancedPayrollTab.tsx",
          "type": "TO_MODIFY",
          "description": "데이터 일치성 확인"
        }
      ],
      "implementationGuide": "1. StaffManagementTab의 시간 수정이 WorkLog에 정확히 저장되는지 확인\n2. 정산탭에서 동일한 WorkLog 데이터를 조회하는지 검증\n3. 출석 상태(출근/지각/결석)가 정산 계산에 반영되는지 확인\n4. 콘솔 로그로 데이터 흐름 추적",
      "verificationCriteria": "스태프탭의 모든 정보가 정산탭과 정산모달에 100% 일치하는지 확인",
      "analysisResult": "스태프탭, 정산탭, 정산모달 간의 완벽한 데이터 동기화를 구현하여 모든 정보가 실시간으로 일치하도록 보장"
    }
  ]
}